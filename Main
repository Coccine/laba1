#include <iostream>
#include <string>

using namespace std;


enum Comands{RUN=1, OPTION, EXIT, RANDOM=1, SAVE, BACK, CMNDEXIT};
void runProgram();


class Menu
{
private:
	int choose = 0;
	string str;
	Comands cmnd;
public:
	void setMainMenu();
	void setOptionsMenu();
	Comands setComand(int value);
public:
	Menu(string str)
	{
		this->str = str;
	}
};


void Menu::setMainMenu()
{
	choose = 0;
	cout << "\t\t" << str << endl;
	cout << "_Run_" << endl;
	cout << "_Options_" << endl;
	cout << "_Exit_" << endl << "Choose an option: ";
	cin >> choose;
	cmnd = setComand(choose);
	do {
		switch (cmnd)
		{
		case RUN:
			runProgram();
			break;
		case OPTION:
			setOptionsMenu();
			break;
		default:
			break;
		}
	} while (cmnd != EXIT);
}

void Menu::setOptionsMenu()
{
	choose = 0;
	cout << "\t\tOptions" << endl;
	cout << "Set random values." << endl;
	cout << "Save results in file." << endl;
	cout << "Back" << endl;
	cout << "Exit" << endl;
	cin >> choose;
	cmnd = setComand(choose);
	do {
		switch (cmnd)
		{
		case RANDOM:

			break;
		case SAVE:
			break;
		case BACK:
			setMainMenu();
			break;
		default:
			break;
		}
	} while (cmnd != CMNDEXIT);
}

Comands Menu::setComand(int value)
{
	Comands cmd;
	cmd = static_cast<Comands>(value);
	return cmd;
}

int main()
{
	setlocale(LC_ALL, "RU");
	Menu myMenu("Laba1");
	myMenu.setMainMenu();



	system("pause");
	return 0;
}

void runProgram()
{
	size_t n, m, k = 0;
	cout << "Введите количество строк и столбцов: ";
	cin >> n >> m;
	if (n <= 0 || m <= 0) {
		cout << "Количество строк и столбцов не мб отрицательным" << endl;
		system("pause");
		exit(1);
	}
	double **A = new double*[n];
	double *B;

	//// Создание матрицы и ее заполнение
	for (size_t i = 0; i < n; i++)
	{
		A[i] = new double[m];
	}
	for (size_t i = 0; i < n; i++)
	{
		for (size_t j = 0; j < m; j++)
		{
			cout << "Введите элемент " << i + 1 << " строки " << j + 1 << " столбца: ";
			cin >> A[i][j];
		}
	}

	//////////// Создание нового массива ////////////////////

	for (size_t i = 0; i < n; i++)
	{
		for (size_t j = 0; j < m; j++)
		{
			if (A[i][j] < 0)
				k++;
		}
	}
	B = new double[k];
	k = 0;
	for (size_t i = 0; i < n; i++)
	{
		for (size_t j = 0; j < m; j++)
		{
			if (A[i][j] < 0) {
				B[k] = A[i][j];
				k++;
			}
		}
	}

	//// Сортировка массива B
	if (k > 1) {
		double temp;
		for (size_t i = 0; i < k; i++)
		{
			for (size_t j = i + 1; j < m; j++) {

				if (B[i] > B[j]) {
					temp = B[i];
					B[i] = B[j];
					B[j] = temp;
				}
			}
		}
	}


	//// Вывод
	cout << "A matrix: " << endl;
	for (size_t i = 0; i < n; i++)
	{
		for (size_t j = 0; j < m; j++)
		{
			cout << A[i][j] << " ";
		}
		cout << endl;
	}
	cout << "B matrix: ";
	for (size_t i = 0; i < k; i++) {
		cout << B[i];
	}
	cout << endl;

	for (size_t i = 0; i < n; i++)
		delete[] A[i];
	delete[] A;
	delete[] B;
}
